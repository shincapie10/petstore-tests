<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="PetStore Test Suite" duration-ms="6922" started-at="2025-03-10T20:48:30 COT" finished-at="2025-03-10T20:48:37 COT">
    <groups>
    </groups>
    <test name="PetStore Functional Tests" duration-ms="6922" started-at="2025-03-10T20:48:30 COT" finished-at="2025-03-10T20:48:37 COT">
      <class name="com.petstore.tests.LogoutUserTest">
        <test-method status="PASS" signature="logoutUser()[pri:0, instance:com.petstore.tests.LogoutUserTest@4157f54e]" name="logoutUser" duration-ms="416" started-at="2025-03-10T20:48:36 COT" finished-at="2025-03-10T20:48:37 COT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutUser -->
      </class> <!-- com.petstore.tests.LogoutUserTest -->
      <class name="com.petstore.tests.GetPetIdTest">
        <test-method status="FAIL" signature="getSpecificPet()[pri:0, instance:com.petstore.tests.GetPetIdTest@6be46e8f]" name="getSpecificPet" duration-ms="879" started-at="2025-03-10T20:48:34 COT" finished-at="2025-03-10T20:48:35 COT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path name doesn't match.
Expected: myTestPet
  Actual: testPet
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path name doesn't match.
Expected: myTestPet
  Actual: testPet

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:60)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:86)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)
at io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at com.petstore.tests.GetPetIdTest.getSpecificPet(GetPetIdTest.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at com.petstore.config.TestRunner.main(TestRunner.java:12)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getSpecificPet -->
      </class> <!-- com.petstore.tests.GetPetIdTest -->
      <class name="com.petstore.tests.CreateOrderTest">
        <test-method status="PASS" signature="createOrderForPet()[pri:0, instance:com.petstore.tests.CreateOrderTest@2d554825]" name="createOrderForPet" duration-ms="3668" started-at="2025-03-10T20:48:30 COT" finished-at="2025-03-10T20:48:33 COT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createOrderForPet -->
      </class> <!-- com.petstore.tests.CreateOrderTest -->
      <class name="com.petstore.tests.CreateUserTest">
        <test-method status="PASS" signature="createUser()[pri:0, instance:com.petstore.tests.CreateUserTest@68837a77]" name="createUser" duration-ms="437" started-at="2025-03-10T20:48:33 COT" finished-at="2025-03-10T20:48:34 COT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
      </class> <!-- com.petstore.tests.CreateUserTest -->
      <class name="com.petstore.tests.LoginUserTest">
        <test-method status="PASS" signature="loginUser()[pri:0, instance:com.petstore.tests.LoginUserTest@327471b5]" name="loginUser" duration-ms="861" started-at="2025-03-10T20:48:35 COT" finished-at="2025-03-10T20:48:36 COT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginUser -->
      </class> <!-- com.petstore.tests.LoginUserTest -->
      <class name="com.petstore.tests.ListAvailablePetsTest">
        <test-method status="PASS" signature="listAvailablePets()[pri:0, instance:com.petstore.tests.ListAvailablePetsTest@3567135c]" name="listAvailablePets" duration-ms="623" started-at="2025-03-10T20:48:35 COT" finished-at="2025-03-10T20:48:35 COT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- listAvailablePets -->
      </class> <!-- com.petstore.tests.ListAvailablePetsTest -->
    </test> <!-- PetStore Functional Tests -->
  </suite> <!-- PetStore Test Suite -->
</testng-results>
